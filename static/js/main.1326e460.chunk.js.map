{"version":3,"sources":["reportWebVitals.ts","assets/icons.tsx","components/AppTheme.tsx","components/AppName.tsx","components/Emote.tsx","components/AppFooter.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","infoIcon","xmlns","fill","className","viewBox","d","userTheme","localStorage","getItem","AppTheme","transitionTimeout","useState","isThemeHidden","setIsThemeHidden","themeRef","useRef","onClickOutsideTheme","event","current","contains","target","document","body","useEffect","window","setTimeout","root","querySelector","classList","remove","add","addEventListener","removeEventListener","themeElement","themeList","map","theme","index","onMouseEnter","id","onClick","setItem","saveTheme","name","title","rel","href","source","ref","AppName","props","refreshButton","isDown","onKeyDown","e","key","preventDefault","onKeyUp","onMouseDown","lastIndex","getRandomEmote","i","Math","floor","random","emotes","length","EmoteComponent","emoteTextRef","emote","setEmote","tooltip","setTooltip","useImperativeHandle","randomEmote","copyTimeout","isHidden","setHidden","copyArea","value","onChange","rows","cols","select","setSelectionRange","execCommand","blur","clearTimeout","onMouseOut","Emote","forwardRef","AppFooter","githublink","link","App","emoteRef","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1326e460.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","/* eslint-disable max-len */\nimport { ReactElement } from 'react'\n\n// https://icons.getbootstrap.com/icons/plus/\nexport const plusIcon: ReactElement = <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" className=\"bi bi-plus\" viewBox=\"0 0 16 16\">\n  <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" /></svg>\n\n// https://icons.getbootstrap.com/icons/arrow-repeat/\nexport const refreshIcon: ReactElement = <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" className=\"bi bi-arrow-repeat\" viewBox=\"0 0 16 16\">\n  <path d=\"M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z\" />\n  <path fillRule=\"evenodd\" d=\"M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z\" />\n</svg>\n\n// https://icons.getbootstrap.com/icons/info/\nexport const infoIcon: ReactElement = <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" className=\"bi bi-info\" viewBox=\"0 0 16 16\">\n  <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\" />\n</svg>\n","import {\n  ReactElement,\n  useEffect,\n  useRef,\n  useState\n} from 'react'\nimport { infoIcon } from 'src/assets/icons'\n\nimport themeList from '../assets/theme.json'\n\nimport '../styles/theme-dropdown.css'\n\nfunction saveTheme(theme: string) {\n  localStorage.setItem('theme', theme)\n  document.body.className = theme\n}\n\nfunction userTheme() {\n  return localStorage.getItem('theme') || 'auto-theme'\n}\n\nexport const AppTheme = (): ReactElement => {\n  const [isThemeHidden, setIsThemeHidden] = useState(true)\n  const themeRef = useRef<HTMLDivElement | null>(null)\n\n  // The color transition animation is not on when the page load\n  let transitionTimeout: number\n  const TRANSITION_ON_START_DELAY = 500\n\n  useEffect(() => {\n    document.body.className = userTheme()\n    // This put the color transition animation after some time when the page\n    // has been loaded\n    if (!transitionTimeout) {\n      transitionTimeout = window.setTimeout(() => {\n        const root = document.querySelector('#root')\n        root?.classList.remove('color-transition')\n        root?.classList.add('color-transition')\n      }, TRANSITION_ON_START_DELAY)\n    }\n  }, [])\n\n  function onClickOutsideTheme(event: MouseEvent) {\n    if (themeRef.current && !themeRef.current.contains(event.target as Node)) {\n      document.body.className = userTheme()\n      setIsThemeHidden(true)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('mousedown', onClickOutsideTheme)\n    return () => {\n      document.removeEventListener('mousedown', onClickOutsideTheme)\n    }\n  }, [themeRef])\n\n  // Create the dropdown element from JSON list\n  const themeElement = themeList\n    .map((theme, index) =>\n      <div\n        className=\"theme-element\"\n        onMouseEnter={() => {\n          document.body.className = theme.id\n        }}\n        key={theme.name + index}>\n        <p\n          onClick={() => {\n            saveTheme(theme.id)\n            setIsThemeHidden(true)\n          }}\n        >\n          {theme.name}\n        </p>\n        <a className=\"theme-info\"\n          title={`${theme.name} source`}\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          href={theme.source}\n        >\n          {infoIcon}\n        </a>\n      </div>\n    )\n\n  return (\n    <div className=\"theme-dropdown\">\n      <p\n        className=\"noselect\"\n        onClick={() => {\n          setIsThemeHidden(false)\n        }}\n      >theme</p>\n      {\n        isThemeHidden ?\n          ''\n          :\n          <div\n            className=\"theme-content\"\n            ref={themeRef}\n          >\n            {themeElement}\n          </div>\n      }\n    </div>\n  )\n}\n","import { ReactElement, useEffect } from 'react'\n\nimport { AppTheme } from './AppTheme'\n\nimport '../styles/header.css'\n\ninterface IAppName {\n  title: string\n  refreshButton?: () => void\n}\n\nexport const AppName: React.FC<IAppName> = (props): ReactElement => {\n  const { refreshButton } = props\n  let isDown = false\n\n  function onKeyDown(e: KeyboardEvent) {\n    if (e.key == 'Tab') {\n      e.preventDefault()\n      if (refreshButton && !isDown)\n        refreshButton()\n      isDown = true\n    }\n  }\n\n  function onKeyUp(e: KeyboardEvent) {\n    if (e.key == 'Tab' && isDown) isDown = false\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', onKeyDown)\n    window.addEventListener('keyup', onKeyUp)\n    return () => {\n      window.removeEventListener('keydown', onKeyDown)\n      window.removeEventListener('keyup', onKeyUp)\n    }\n  }, [])\n\n  return (\n    <div className=\"app-name\">\n      <div className=\"left\"></div>\n      <div className=\"center\">\n        <h1 className=\"app-title noselect\"\n          onClick={refreshButton}\n        >{props.title}</h1>\n      </div>\n      <div className=\"right\">\n        <div className=\"options\">\n          <AppTheme />\n          <span\n            className=\"refresh noselect\"\n            onMouseDown={refreshButton}\n          >refresh</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import {\n  ReactElement,\n  useState,\n  useRef,\n  Ref,\n  useImperativeHandle,\n  forwardRef\n} from 'react'\n\nimport emotes from '../assets/emotes.json'\n\nimport '../styles/emote.css'\n\nexport interface IEmoteProps {\n  title?: string\n}\n\nexport interface IEmoteRef {\n  randomEmote: () => void\n}\n\ninterface IEmote {\n  emote: string\n}\n\nlet lastIndex = 0\nfunction getRandomEmote(): IEmote {\n  let i = Math.floor(Math.random() * emotes.length)\n  if (lastIndex == i) {\n    i = (i < emotes.length) ? i++ : i--\n    lastIndex = i\n  }\n  return emotes[i]\n}\n\nfunction EmoteComponent(props: IEmoteProps, ref: Ref<IEmoteRef>): ReactElement {\n  const emoteTextRef = useRef<HTMLTextAreaElement | null>(null)\n  const [emote, setEmote] = useState(getRandomEmote()) // e\n  const [tooltip, setTooltip] = useState('Copy')\n\n  // Bind the randomEmote function\n  useImperativeHandle(ref, () => ({ randomEmote }))\n  const randomEmote = () => {\n    setEmote(getRandomEmote())\n  }\n\n  const [isHidden, setHidden] = useState(true)\n  const copyArea: ReactElement = <textarea\n    id=\"emote-copy-area\"\n    value={emote.emote}\n    ref={emoteTextRef}\n    onChange={() => { return }}\n    rows={24}\n    cols={80}\n  ></textarea>\n\n  let copyTimeout: number       // timeout id\n  const COPY_TIMEOUT_DELAY = 10 // ms\n\n  return (\n    <div className=\"emote-container\">\n      <div className=\"emote-copy\"\n        onClick={() => {\n          if (!copyTimeout) {\n            setHidden(false)\n            copyTimeout = window.setTimeout(\n              () => {\n                emoteTextRef.current?.select()\n                emoteTextRef.current?.setSelectionRange(0, 99999)\n                document.execCommand('copy')\n                setTooltip('Copied!')\n\n                emoteTextRef.current?.blur()\n\n                setHidden(true)\n                clearTimeout(copyTimeout)\n              },\n              COPY_TIMEOUT_DELAY)\n          }\n        }}\n        onMouseOut={() => setTooltip('Copy')}>\n        <span id=\"emote-display\" className=\"noselect\">{emote.emote}</span>\n        {isHidden ? '' : copyArea}\n        <span className=\"emote-tooltip noselect\">{tooltip}</span>\n      </div>\n    </div >\n  )\n}\n\nexport const Emote = forwardRef(EmoteComponent)\n","import { ReactElement } from 'react'\n\ninterface IAppFooter {\n  link: string\n  name: string\n  githublink?: string\n}\n\nexport function AppFooter(props: IAppFooter): ReactElement {\n  return (\n    <div className=\"app-footer noselect\" >\n      <a\n        title=\"Github repository link\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n        href={props.githublink ? props.githublink : '/'}\n      >Github Repository</a>\n      <span>|</span>\n      <a title=\"Github profile link\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n        href={props.link}\n        id=\"github-link\">{props.name}</a>\n    </div >\n  )\n}\n","import { useRef } from 'react'\n\nimport { AppName } from './components/AppName'\nimport { Emote, IEmoteRef } from './components/Emote'\nimport { AppFooter } from './components/AppFooter'\n\nexport function App(): JSX.Element {\n  const emoteRef = useRef<IEmoteRef>(null)\n\n  return (\n    <div className=\"app\">\n      <AppName\n        title={'./emote'}\n        refreshButton={() => emoteRef.current?.randomEmote()}\n      />\n      <Emote ref={emoteRef} />\n      <AppFooter\n        link='https://github.com/KTheXIII'\n        name='2021 © KTheXIII'\n        githublink='https://github.com/KTheXIII/emote-reactjs'\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\n\nimport './styles/main.css'\n\nimport { App } from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}