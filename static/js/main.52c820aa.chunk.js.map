{"version":3,"sources":["reportWebVitals.ts","components/AppName.tsx","components/Emote.tsx","components/AppFooter.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppName","props","className","onClick","titleClicked","title","lastIndex","emoteList","emotes","list","getRandomEmote","i","Math","floor","random","length","Emote","forwardRef","ref","emoteTextRef","useRef","useState","emote","setEmote","tool","setTool","useImperativeHandle","randomEmote","copyTimeout","isHidden","setHidden","copyArea","id","value","onChange","rows","cols","onKeyPress","e","preventDefault","window","setTimeout","current","select","setSelectionRange","document","execCommand","blur","clearTimeout","onMouseOut","AppFooter","rel","target","href","githublink","link","name","App","emoteRef","ReactDOM","render","StrictMode","getElementById"],"mappings":"+LAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCHP,SAASQ,EAAQC,GACtB,OACE,qBAAKC,UAAU,WAAf,SACE,mBAAGA,UAAU,qBACXC,QAASF,EAAMG,aADjB,SAEEH,EAAMI,U,kBCOVC,EAAY,EACVC,EAAYC,EAAOC,KACzB,SAASC,IACP,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,SAAWP,EAAUQ,QAK7C,OAJIT,GAAaK,IACfA,EAAKA,EAAIJ,EAAUQ,OAAUJ,IAAMA,IACnCL,EAAYK,GAEPJ,EAAUI,GAGZ,IAAMK,EAAQC,sBAAW,SAAChB,EAAoBiB,GACnD,IAAMC,EAAeC,iBAAmC,MACxD,EAA0BC,mBAASX,KAAnC,mBAAOY,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,QAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEAC,8BAAoBR,GAAK,iBAAO,CAAES,kBAElC,IAUIC,EAVJ,EAA8BP,oBAAS,GAAvC,mBAAOQ,EAAP,KAAiBC,EAAjB,KACMC,EAAW,0BACfC,GAAG,kBACHC,MAAOX,EACPJ,IAAKC,EACLe,SAAU,aACVC,KAAM,GACNC,KAAM,KAMFT,EAAc,WAClBJ,EAASb,MAEX,OACE,qBAAKR,UAAU,kBACbmC,WAAY,SAAAC,GACVA,EAAEC,kBAFN,SAKE,sBAAKrC,UAAU,aACbC,QAAS,WACFyB,IACHE,GAAU,GAEVF,EAAcY,OAAOC,YAAW,WAAO,IAAD,MACpC,UAAAtB,EAAauB,eAAb,SAAsBC,SACtB,UAAAxB,EAAauB,eAAb,SAAsBE,kBAAkB,EAAG,OAC3CC,SAASC,YAAY,QACrBrB,EAAQ,WAER,UAAAN,EAAauB,eAAb,SAAsBK,OAEtBjB,GAAU,GACVkB,aAAapB,KAzBA,MA6BnBqB,WAAY,WACVxB,EAAQ,SAnBZ,UAqBE,sBAAMO,GAAG,gBAAgB9B,UAAU,WAAnC,SAA+CoB,IAC9CO,EAAW,GAAKE,EACjB,sBACE7B,UAAU,yBADZ,SAEEsB,YC7EH,SAAS0B,EAAUjD,GACxB,OACE,sBAAKC,UAAU,aAAf,UACE,mBACEG,MAAM,yBACN8C,IAAI,aACJC,OAAO,SACPC,KAAMpD,EAAMqD,WAAarD,EAAMqD,WAAa,IAJ9C,+BAMA,qCACA,mBAAGjD,MAAM,sBACP8C,IAAI,aACJC,OAAO,SACPC,KAAMpD,EAAMsD,KACZvB,GAAG,cAJL,SAIoB/B,EAAMuD,UCfzB,SAASC,IACd,IAAMC,EAAWtC,iBAAkB,MAEnC,OACE,sBAAKlB,UAAU,MAAf,UACE,cAACF,EAAD,CACEK,MAAO,UACPD,aAAc,kCAAMsD,EAAShB,eAAf,aAAM,EAAkBf,iBAExC,cAACX,EAAD,CACEE,IAAKwC,IACP,cAACR,EAAD,CACEK,KAAK,8BACLC,KAAK,qBACLF,WAAW,iDCXnBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACJ,EAAD,MAEFZ,SAASiB,eAAe,SAG1BvE,K","file":"static/js/main.52c820aa.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","\ninterface IAppName {\n  title: string\n  titleClicked?: (() => void)\n}\n\nexport function AppName(props: IAppName): JSX.Element {\n  return (\n    <div className=\"app-name\">\n      <p className=\"app-title noselect\"\n        onClick={props.titleClicked}\n      >{props.title}</p>\n    </div>\n  )\n}\n","import {\n  useState,\n  useRef,\n  Ref,\n  useImperativeHandle,\n  forwardRef\n} from 'react'\n\nimport emotes from '../assets/emojis.json'\n\nexport interface IEmoteProps {\n  title?: string\n}\n\nexport interface IEmoteRef {\n  randomEmote: () => void\n}\n\nlet lastIndex = 0\nconst emoteList = emotes.list\nfunction getRandomEmote() {\n  let i = Math.floor(Math.random() * emoteList.length)\n  if (lastIndex == i) {\n    i = (i < emoteList.length) ? i++ : i--\n    lastIndex = i\n  }\n  return emoteList[i]\n}\n\nexport const Emote = forwardRef((props: IEmoteProps, ref: Ref<IEmoteRef>) => {\n  const emoteTextRef = useRef<HTMLTextAreaElement | null>(null)\n  const [emote, setEmote] = useState(getRandomEmote())\n  const [tool, setTool] = useState('Copy')\n\n  useImperativeHandle(ref, () => ({ randomEmote }))\n\n  const [isHidden, setHidden] = useState(true)\n  const copyArea = <textarea\n    id=\"emote-copy-area\"\n    value={emote}\n    ref={emoteTextRef}\n    onChange={() => { return }}\n    rows={24}\n    cols={80}>\n  </textarea>\n\n  let copyTimeout: number\n  const copyTimeoutDelay = 10\n\n  const randomEmote = () => {\n    setEmote(getRandomEmote())\n  }\n  return (\n    <div className=\"emote-container\"\n      onKeyPress={e => {\n        e.preventDefault()\n      }}\n    >\n      <div className=\"emote-copy\"\n        onClick={() => {\n          if (!copyTimeout) {\n            setHidden(false)\n\n            copyTimeout = window.setTimeout(() => {\n              emoteTextRef.current?.select()\n              emoteTextRef.current?.setSelectionRange(0, 99999)\n              document.execCommand('copy')\n              setTool('Copied!')\n\n              emoteTextRef.current?.blur()\n\n              setHidden(true)\n              clearTimeout(copyTimeout)\n            }, copyTimeoutDelay)\n          }\n        }}\n        onMouseOut={() => {\n          setTool('Copy')\n        }}>\n        <span id=\"emote-display\" className=\"noselect\">{emote}</span>\n        {isHidden ? '' : copyArea}\n        <span\n          className=\"emote-tooltip noselect\"\n        >{tool}</span>\n      </div>\n    </div >\n  )\n})\n","interface IAppFooter {\n  link: string\n  name: string\n  githublink?: string\n}\n\nexport function AppFooter(props: IAppFooter): JSX.Element {\n  return (\n    <div className=\"app-footer\">\n      <a\n        title=\"Github repository link\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n        href={props.githublink ? props.githublink : '/'}\n      >Github Repository</a>\n      <span>|</span>\n      <a title=\"Github profile link\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n        href={props.link}\n        id=\"github-link\">{props.name}</a>\n    </div >\n  )\n}\n","import { useRef } from 'react'\nimport { AppName } from './components/AppName'\nimport { Emote, IEmoteRef } from './components/Emote'\nimport { AppFooter } from './components/AppFooter'\n\nexport function App(): JSX.Element {\n  const emoteRef = useRef<IEmoteRef>(null)\n\n  return (\n    <div className=\"app\">\n      <AppName\n        title={'./emote'}\n        titleClicked={() => emoteRef.current?.randomEmote()}\n      />\n      <Emote\n        ref={emoteRef} />\n      <AppFooter\n        link='https://github.com/KTheXIII'\n        name='2021 Â© KTheXIII'\n        githublink='https://github.com/KTheXIII/emote-reactjs'\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\n\nimport './styles/main.css'\n\nimport { App } from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}