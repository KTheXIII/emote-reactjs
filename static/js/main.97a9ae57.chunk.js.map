{"version":3,"sources":["components/AppName.tsx","components/Emote.tsx","components/AppFooter.tsx","App.tsx","index.tsx"],"names":["AppName","props","className","onClick","titleClicked","title","lastIndex","emoteList","emotes","list","getRandomEmote","i","Math","floor","random","length","Emote","emoteTextRef","useRef","useState","emote","setEmote","tool","setTool","useEffect","randomise","onKeyPress","e","preventDefault","current","select","setSelectionRange","document","execCommand","onMouseOut","id","type","value","ref","onChange","AppFooter","rel","target","href","githublink","link","name","App","randomEmote","ReactDOM","render","StrictMode","getElementById"],"mappings":"qNAMO,SAASA,EAAQC,GACtB,OACE,qBAAKC,UAAU,WAAf,SACE,mBAAGA,UAAU,qBACXC,QAASF,EAAMG,aADjB,SAEEH,EAAMI,U,WCAVC,EAAY,EACVC,EAAYC,EAAOC,KACzB,SAASC,IACP,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,SAAWP,EAAUQ,QAK7C,OAJIT,GAAaK,IACfA,EAAKA,EAAIJ,EAAUQ,OAAUJ,IAAMA,IACnCL,EAAYK,GAEPJ,EAAUI,GAGZ,SAASK,EAAMf,GACpB,IAAMgB,EAAeC,iBAAgC,MACrD,EAA0BC,mBAAST,KAAnC,mBAAOU,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,QAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAMA,OAJAC,qBAAU,WACRH,EAASX,OACR,CAACT,EAAMwB,YAGR,qBAAKvB,UAAU,kBACbwB,WAAY,SAAAC,GACVA,EAAEC,kBAFN,SAKE,sBAAK1B,UAAU,aACbC,QAAS,WAAO,IAAD,IACb,UAAAc,EAAaY,eAAb,SAAsBC,SACtB,UAAAb,EAAaY,eAAb,SAAsBE,kBAAkB,EAAG,OAC3CC,SAASC,YAAY,QACrBV,EAAQ,YAEVW,WAAY,WACVX,EAAQ,SARZ,UAUE,sBAAMY,GAAG,gBAAgBjC,UAAU,WAAnC,SAA+CkB,IAC/C,uBACEgB,KAAK,OACLD,GAAG,mBACHE,MAAOjB,EACPkB,IAAKrB,EACLsB,SAAU,eACZ,sBACErC,UAAU,yBADZ,SAEEoB,SClDH,SAASkB,EAAUvC,GACxB,OACE,sBAAKC,UAAU,aAAf,UACE,mBACEG,MAAM,yBACNoC,IAAI,aACJC,OAAO,SACPC,KAAM1C,EAAM2C,WAAa3C,EAAM2C,WAAa,IAJ9C,+BAMA,qCACA,mBAAGvC,MAAM,sBACPoC,IAAI,aACJC,OAAO,SACPC,KAAM1C,EAAM4C,KACZV,GAAG,cAJL,SAIoBlC,EAAM6C,UCMjBC,MArBf,WACE,MAAiC5B,mBAAS,GAA1C,mBAAOM,EAAP,KAAkBuB,EAAlB,KAEA,OACE,sBAAK9C,UAAU,MAAf,UACE,cAACF,EAAD,CACEK,MAAO,UACPD,aAAc,WACZ4C,EAAYpC,KAAKE,aAGrB,cAACE,EAAD,CAAOS,UAAWA,IAClB,cAACe,EAAD,CACEK,KAAK,8BACLC,KAAK,qBACLF,WAAW,kDCbnBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,U","file":"static/js/main.97a9ae57.chunk.js","sourcesContent":["\ninterface IAppName {\n  title: string\n  titleClicked: (() => void)\n}\n\nexport function AppName(props: IAppName): JSX.Element {\n  return (\n    <div className=\"app-name\">\n      <p className=\"app-title noselect\"\n        onClick={props.titleClicked}\n      >{props.title}</p>\n    </div>\n  )\n}\n","import {\n  useState,\n  useRef,\n  useEffect\n} from 'react'\nimport emotes from '../assets/emojis.json'\n\ninterface IEmote {\n  randomise?: number\n}\n\nlet lastIndex = 0\nconst emoteList = emotes.list\nfunction getRandomEmote() {\n  let i = Math.floor(Math.random() * emoteList.length)\n  if (lastIndex == i) {\n    i = (i < emoteList.length) ? i++ : i--\n    lastIndex = i\n  }\n  return emoteList[i]\n}\n\nexport function Emote(props: IEmote): JSX.Element {\n  const emoteTextRef = useRef<HTMLInputElement | null>(null)\n  const [emote, setEmote] = useState(getRandomEmote())\n  const [tool, setTool] = useState('Copy')\n\n  useEffect(() => {\n    setEmote(getRandomEmote())\n  }, [props.randomise])\n\n  return (\n    <div className=\"emote-container\"\n      onKeyPress={e => {\n        e.preventDefault()\n      }}\n    >\n      <div className=\"emote-copy\"\n        onClick={() => {\n          emoteTextRef.current?.select()\n          emoteTextRef.current?.setSelectionRange(0, 99999)\n          document.execCommand('copy')\n          setTool('Copied!')\n        }}\n        onMouseOut={() => {\n          setTool('Copy')\n        }}>\n        <span id=\"emote-display\" className=\"noselect\">{emote}</span>\n        <input\n          type=\"text\"\n          id=\"emote-copy-input\"\n          value={emote}\n          ref={emoteTextRef}\n          onChange={() => { /* */ }} />\n        <span\n          className=\"emote-tooltip noselect\"\n        >{tool}</span>\n      </div>\n    </div >\n  )\n}\n","interface IAppFooter {\n  link: string\n  name: string\n  githublink?: string\n}\n\nexport function AppFooter(props: IAppFooter): JSX.Element {\n  return (\n    <div className=\"app-footer\">\n      <a\n        title=\"Github repository link\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n        href={props.githublink ? props.githublink : '/'}\n      >Github Repository</a>\n      <span>|</span>\n      <a title=\"Github profile link\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n        href={props.link}\n        id=\"github-link\">{props.name}</a>\n\n    </div >\n  )\n}\n","import { useState } from 'react'\nimport { AppName } from './components/AppName'\nimport { Emote } from './components/Emote'\nimport { AppFooter } from './components/AppFooter'\n\nfunction App(): JSX.Element {\n  const [randomise, randomEmote] = useState(0)\n\n  return (\n    <div className=\"app\">\n      <AppName\n        title={'./emote'}\n        titleClicked={() => {\n          randomEmote(Math.random())\n        }}\n      />\n      <Emote randomise={randomise} />\n      <AppFooter\n        link='https://github.com/KTheXIII'\n        name='2021 Â© KTheXIII'\n        githublink='https://github.com/KTheXIII/emote-reactjs'\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './styles/main.css'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}